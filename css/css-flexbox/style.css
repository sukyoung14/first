.flex-container {
  display: flex;
  background-color: lightblue;
  height: 1000px;
  width: 100vw;
}
/* flex-direction : 플랙스 아이템들의 배치의 방향 */
.d-row {
  flex-direction: row;
}
.d-row-reverse {
  /*행, 역방향 : 오른쪽->왼쪽 */
  flex-direction: row-reverse;
}
.d-col {
  /* 열, 정방향 */
  flex-direction: column;
}
.d-col-reverse {
  /* 행, 역방향 */
  flex-direction: column-reverse;
}
/* 플렉스 아이템들의 배치(정렬) 방식 */
.flex-start {
  /* justify-content : 주축을 기준으로 한 배치 방식 */
  justify-content: flex-start;
}
.flex-end {
  /* justify-content : 주축을 기준으로 한 배치 방식 */
  justify-content: flex-end;
}
.center {
  /*주축방향 중앙정렬 */
  justify-content: center;
}
.space-between {
  justify-content: space-between;
}
.space-around {
  justify-content: space-around;
}
.space-evenly {
  justify-content: space-evenly;
}
/* 교차축 배치(쩡렬) 방식 */
.align-center {
  /* align-items*/
  /* 교차축 배치(정렬) 방식*/
  align-items: center;
}
/* 아이템의 줄바꿈 여부 */
.flex-nowrap {
  /* 너비(높이)보다
  내부 아이템의 너비(높이) 합이 크면
  내부 아이템의 너비(높이를) 줄여서 
  한줄에 배치*/
  flex-wrap: nowrap;
}
.flex-wrap {
  /* 너비(높이)보다
  내부 아이템의 너비(높이) 합이 크면
  여러줄에 배치*/
  flex-wrap: wrap;
}
.box {
  width: 100px;
  height: 200px;
  background-color: lightgray;
  margin: 20px;
}
/* 플렉스 아이템은 별도의 display를 설정 */
/* 왜냐하면 부모가 display : flex라면 */
/* 자동으로 플랙스 아이템 */
.big-box {
  background-color: lightpink;
  width: 500px;
  height: 300px;
  margin: 20px;
}
